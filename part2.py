#Part1 
#Group uc05



import operator

#file where we store the hexdumped values of the ciphertext
filename = "ctext2hexdump.txt"
cipher = [line.rstrip('\n') for line in open(filename)]
length = len(cipher)


#table used in the decryption process
table = [
    # 0    1    2    3    4    5    6    7    8    9    10   11   12   13   14    15
    [0xf, 0x7, 0x6, 0x4, 0x5, 0x1, 0x0, 0x2, 0x3, 0xb, 0xa, 0x8, 0x9, 0xd, 0xc, 0xe], #0
    [0x2, 0x3, 0xb, 0xa, 0x8, 0x9, 0xd, 0xc, 0xe, 0xf, 0x7, 0x6, 0x4, 0x5, 0x1, 0x0], #1
    [0x6, 0x4, 0x5, 0x1, 0x0, 0x2, 0x3, 0xb, 0xa, 0x8, 0x9, 0xd, 0xc, 0xe, 0xf, 0x7], #2
    [0x8, 0x9, 0xd, 0xc, 0xe, 0xf, 0x7, 0x6, 0x4, 0x5, 0x1, 0x0, 0x2, 0x3, 0xb, 0xa], #3
    [0x5, 0x1, 0x0, 0x2, 0x3, 0xb, 0xa, 0x8, 0x9, 0xd, 0xc, 0xe, 0xf, 0x7, 0x6, 0x4], #4   
    [0xb, 0xa, 0x8, 0x9, 0xd, 0xc, 0xe, 0xf, 0x7, 0x6, 0x4, 0x5, 0x1, 0x0, 0x2, 0x3], #5  
    [0x0, 0x2, 0x3, 0xb, 0xa, 0x8, 0x9, 0xd, 0xc, 0xe, 0xf, 0x7, 0x6, 0x4, 0x5, 0x1], #6
    [0x7, 0x6, 0x4, 0x5, 0x1, 0x0, 0x2, 0x3, 0xb, 0xa, 0x8, 0x9, 0xd, 0xc, 0xe, 0xf], #7
    [0x3, 0xb, 0xa, 0x8, 0x9, 0xd, 0xc, 0xe, 0xf, 0x7, 0x6, 0x4, 0x5, 0x1, 0x0, 0x2], #8                          
    [0x1, 0x0, 0x2, 0x3, 0xb, 0xa, 0x8, 0x9, 0xd, 0xc, 0xe, 0xf, 0x7, 0x6, 0x4, 0x5], #9                          
    [0xa, 0x8, 0x9, 0xd, 0xc, 0xe, 0xf, 0x7, 0x6, 0x4, 0x5, 0x1, 0x0, 0x2, 0x3, 0xb], #10                          
    [0x4, 0x5, 0x1, 0x0, 0x2, 0x3, 0xb, 0xa, 0x8, 0x9, 0xd, 0xc, 0xe, 0xf, 0x7, 0x6], #11                          
    [0x9, 0xd, 0xc, 0xe, 0xf, 0x7, 0x6, 0x4, 0x5, 0x1, 0x0, 0x2, 0x3, 0xb, 0xa, 0x8], #12                            
    [0xd, 0xc, 0xe, 0xf, 0x7, 0x6, 0x4, 0x5, 0x1, 0x0, 0x2, 0x3, 0xb, 0xa, 0x8, 0x9], #13                            
    [0xc, 0xe, 0xf, 0x7, 0x6, 0x4, 0x5, 0x1, 0x0, 0x2, 0x3, 0xb, 0xa, 0x8, 0x9, 0xd], #14                             
    [0xe, 0xf, 0x7, 0x6, 0x4, 0x5, 0x1, 0x0, 0x2, 0x3, 0xb, 0xa, 0x8, 0x9, 0xd, 0xc]] #15



def ith_char(iChar):
    max_list = []
    for i in range(iChar):
        maximum = max(count[i].items(), key=operator.itemgetter(1))[0]
        max_list.append(maximum)
    return max_list

key = ['35', '33', '2e', '35', '30', '33', '35', '36', '33', '4e', '2c', '2d', '31', '31', '33', '2e', '35', '32', '38', '38', '39', '34', '57']


cipher = [line.rstrip('\n') for line in open(filename)]

key_length = len(key)
counter = 0
#creating the array for plaintext integer values
intArray = []
tmp_collist_ph=[]
tmp_collist_pl=[] 


#decryption being done
for char in cipher:
    if counter >= key_length:
        counter = 0 
    ch = int(char[0], 16)
    cl = int(char[1], 16)
    key_char = key[counter]
    kh = int(key_char[0], 16)
    kl = int(key_char[1], 16)

    for pixie in table:
        tmp_collist_ph.append(pixie[kl])
        tmp_collist_pl.append(pixie[kh])

    
    pl = hex(tmp_collist_pl.index(cl))
    ph = hex(tmp_collist_ph.index(ch))

    intArray.append(int(ph+pl[2:], 16))
    tmp_collist_ph=[]
    tmp_collist_pl=[]
    
    counter += 1

# convert array of plaintext integers into binary
result = bytearray(intArray)

#creating a new binary file and writing the plaintext in binary to it
plaintext_part1 = open("plaintext2", "wb")
plaintext_part1.write(result)
plaintext_part1.close()


